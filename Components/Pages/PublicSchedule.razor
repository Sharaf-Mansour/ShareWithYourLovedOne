@page "/{RouteToken}"
@inject IScheduleEntryService ScheduleEntryService

<PageTitle>Shared Schedule</PageTitle>

<div class="min-h-screen bg-gray-900 font-sans p-4">
	<div class="bg-gray-800 rounded-2xl shadow-xl w-full max-w-4xl mx-auto p-6">

		@if (isLoading)
		{
			<p class="text-gray-400 text-center">Loading schedule...</p>
		}
		else if (scheduleEntries.Any())
		{
			<h1 class="text-3xl font-bold text-white text-center mb-6">A Shared Schedule</h1>
			<div class="space-y-3">
				@foreach (var entry in scheduleEntries)
				{
					<ViewEnteryComponent Entry="entry" ShowActions="false" />
				}
			</div>
		}
		else
		{
			<p class="text-red-400 text-center text-xl py-10">Could not load schedule. The link may be invalid or expired.</p>
		}

	</div>
</div>

@code {
	[Parameter]
	public required string RouteToken { get; set; }

	private List<ScheduleEntry> scheduleEntries = new();
	private bool isLoading = true;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			var entries = await ScheduleEntryService.RetrievePublicScheduleByTokenAsync(RouteToken);
			scheduleEntries = entries.ToList();
		}
		catch (Exception ex)
		{
			Console.WriteLine($"error fetchingn public schdule:{ex.Message}");
		}
		finally
		{
			isLoading = false;
		}
	}
}
